{"version":3,"file":"Workbook.js","sourceRoot":"","sources":["../../../../src/EmbeddingApi/Models/Workbook.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Contract from '@tableau/api-external-contract-js';\nimport { CustomViewImpl, DashboardImpl, SheetInfoImpl, StoryImpl, TableauError, WorksheetImpl } from '@tableau/api-shared-js';\nimport { EmbeddingWorkbookImpl } from '../Impl/EmbeddingWorkbookImpl';\nimport { CustomView } from './CustomView';\nimport { Dashboard } from './Dashboard';\nimport { Parameter } from './Parameter';\nimport { SheetInfo } from './SheetInfo';\nimport { Story } from './Story';\nimport { Worksheet } from './Worksheet';\n\nexport class Workbook implements Contract.EmbeddingWorkbook {\n  public constructor(private _workbookImpl: EmbeddingWorkbookImpl) {}\n\n  public get activeSheet(): Contract.EmbeddingSheet {\n    switch (this._workbookImpl.activeSheet.sheetType) {\n      case Contract.SheetType.Worksheet: {\n        return new Worksheet(this._workbookImpl.activeSheet as WorksheetImpl, this._workbookImpl);\n      }\n      case Contract.SheetType.Dashboard: {\n        return new Dashboard(this._workbookImpl.activeSheet as DashboardImpl, this._workbookImpl);\n      }\n      case Contract.SheetType.Story: {\n        return new Story(this._workbookImpl.activeSheet as StoryImpl, this._workbookImpl);\n      }\n      default: {\n        throw new TableauError(Contract.EmbeddingErrorCodes.ImplementationError, 'Unable to initialize ActiveSheet');\n      }\n    }\n  }\n\n  public get publishedSheetsInfo(): Array<Contract.SheetInfo> {\n    return this._workbookImpl.publishedSheetsInfo.map((sheetInfoImpl: SheetInfoImpl) => {\n      return new SheetInfo(sheetInfoImpl, this._workbookImpl);\n    });\n  }\n\n  public get name(): string {\n    return this._workbookImpl.name;\n  }\n\n  public get activeCustomView(): Contract.CustomView | undefined {\n    if (this._workbookImpl.activeCustomView) {\n      return new CustomView(this._workbookImpl.activeCustomView, this._workbookImpl);\n    } else {\n      return undefined;\n    }\n  }\n\n  public activateSheetAsync(sheetNameOrIndex: string | number): Promise<Contract.EmbeddingSheet> {\n    return this._workbookImpl.activateSheetAsync(sheetNameOrIndex).then((workbookImpl: EmbeddingWorkbookImpl) => {\n      if (this._workbookImpl !== workbookImpl) {\n        this._workbookImpl = workbookImpl;\n      }\n      return this.activeSheet;\n    });\n  }\n\n  public revertAllAsync(): Promise<void> {\n    return this._workbookImpl.revertAllAsync();\n  }\n\n  public getCustomViewsAsync(): Promise<Array<Contract.CustomView>> {\n    return this._workbookImpl.getCustomViewsAsync().then((customViewsImpl: Array<CustomViewImpl>) => {\n      return customViewsImpl.map((customViewImpl) => {\n        return new CustomView(customViewImpl, this._workbookImpl);\n      });\n    });\n  }\n\n  public showCustomViewAsync(customViewName?: string | null): Promise<Contract.CustomView | undefined> {\n    return this._workbookImpl.showCustomViewAsync(customViewName).then((customViewImpl: CustomViewImpl | undefined) => {\n      return customViewImpl ? new CustomView(customViewImpl, this._workbookImpl) : undefined;\n    });\n  }\n\n  public removeCustomViewAsync(customViewName: string): Promise<Contract.CustomView> {\n    return this._workbookImpl.removeCustomViewAsync(customViewName).then((customViewImpl: CustomViewImpl) => {\n      return new CustomView(customViewImpl, this._workbookImpl);\n    });\n  }\n\n  public saveCustomViewAsync(customViewName: string): Promise<Contract.CustomView> {\n    return this._workbookImpl.saveCustomViewAsync(customViewName).then((customViewImpl: CustomViewImpl) => {\n      return new CustomView(customViewImpl, this._workbookImpl);\n    });\n  }\n\n  public setActiveCustomViewAsDefaultAsync(): Promise<void> {\n    return this._workbookImpl.setActiveCustomViewAsDefaultAsync();\n  }\n\n  public getParametersAsync(): Promise<Array<Contract.EmbeddingParameter>> {\n    return this._workbookImpl.getParametersAsync().then((parametersImpl) => {\n      return parametersImpl.map((parameterImpl) => {\n        return new Parameter(parameterImpl);\n      });\n    });\n  }\n\n  public changeParameterValueAsync(name: string, value: string | number | boolean | Date): Promise<Contract.EmbeddingParameter> {\n    return this._workbookImpl.changeParameterValueAsync(name, value).then((parameterImpl) => {\n      if (parameterImpl) {\n        return new Parameter(parameterImpl);\n      } else {\n        throw new TableauError(Contract.EmbeddingErrorCodes.InvalidParameter, `Invalid parameter:  ${name}`);\n      }\n    });\n  }\n}\n"]}