{"version":3,"file":"Dashboard.js","sourceRoot":"","sources":["../../../../src/EmbeddingApi/Models/Dashboard.ts"],"names":[],"mappings":";;AAGA,uDAAoD;AACpD,mCAAgC;AAChC,6CAA0C;AAC1C,2CAAwC;AAExC,MAAa,SAAU,SAAQ,aAAK;IAClC,YAA2B,cAA6B,EAAE,YAAmC;QAC3F,KAAK,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;QADX,mBAAc,GAAd,cAAc,CAAe;QAEtD,cAAc,CAAC,8BAA8B,EAAE,CAAC;IAClD,CAAC;IAED,IAAW,OAAO;QAChB,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;YAChD,OAAO,IAAI,iCAAe,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAW,UAAU;QACnB,OAAO,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;YACvD,OAAO,IAAI,qBAAS,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAW,gBAAgB;QACzB,IAAI,IAAI,CAAC,cAAc,CAAC,gBAAgB,IAAI,IAAI,EAAE;YAChD,0DAA0D;YAC1D,OAAO,IAAI,CAAC;SACb;QAED,OAAO,IAAI,uBAAU,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAClF,CAAC;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC;IAEM,gBAAgB,CACrB,SAAiB,EACjB,MAAqB,EACrB,UAAqC,EACrC,OAA+B;QAE/B,OAAO,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;IACtF,CAAC;CACF;AAvCD,8BAuCC","sourcesContent":["import * as Contract from '@tableau/api-external-contract-js';\nimport { DashboardImpl } from '@tableau/api-shared-js';\nimport { EmbeddingWorkbookImpl } from '../Impl/EmbeddingWorkbookImpl';\nimport { DashboardObject } from './DashboardObject';\nimport { Sheet } from './Sheet';\nimport { StoryPoint } from './StoryPoint';\nimport { Worksheet } from './Worksheet';\n\nexport class Dashboard extends Sheet implements Contract.EmbeddingDashboard {\n  public constructor(private _dashboardImpl: DashboardImpl, workbookImpl: EmbeddingWorkbookImpl) {\n    super(_dashboardImpl, workbookImpl);\n    _dashboardImpl.initializeWithPublicInterfaces();\n  }\n\n  public get objects(): Array<Contract.EmbeddingDashboardObject> {\n    return this._dashboardImpl.objects.map((object) => {\n      return new DashboardObject(object, this._workbookImpl);\n    });\n  }\n\n  public get worksheets(): Array<Contract.EmbeddingWorksheet> {\n    return this._dashboardImpl.worksheetsImpl.map((object) => {\n      return new Worksheet(object, this._workbookImpl);\n    });\n  }\n\n  public get parentStoryPoint(): Contract.StoryPoint | null {\n    if (this._dashboardImpl.parentStoryPoint == null) {\n      // Dashboard doesn't belong to a story point. Return null.\n      return null;\n    }\n\n    return new StoryPoint(this._dashboardImpl.parentStoryPoint, this._workbookImpl);\n  }\n\n  public getFiltersAsync(): Promise<Array<Contract.Filter>> {\n    return this._dashboardImpl.getFiltersAsync();\n  }\n\n  public applyFilterAsync(\n    fieldName: string,\n    values: Array<string>,\n    updateType: Contract.FilterUpdateType,\n    options: Contract.FilterOptions,\n  ): Promise<string> {\n    return this._dashboardImpl.applyFilterAsync(fieldName, values, updateType, options);\n  }\n}\n"]}