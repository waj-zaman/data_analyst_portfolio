import { CustomParameter, FilterParameters, VizAuthoringSettings, VizParameter, VizSettings } from '@tableau/api-external-contract-js';
import { EmbeddingUrlBuilder } from './EmbeddingUrlBuilder';
export declare enum EmbeddingUrlMode {
    Viewing = 0,
    Authoring = 1
}
export declare class EmbeddingVizUrlBuilder extends EmbeddingUrlBuilder {
    constructor(_url: URL);
    appendFilters(filters: FilterParameters[]): EmbeddingVizUrlBuilder;
    appendParams(params: VizParameter[]): EmbeddingVizUrlBuilder;
    /**
     * Sanitizes parameter values before they are added to the search params.
     * @param parameterName The name of the parameter. Some parameters require special handling.
     * @param value The raw value of the parameter.
     */
    protected sanitizeParameterValue(parameterName: string, value: unknown): string;
}
/**
 * This function should be the only one in api-embedding to contain any knowledge of how to
 * construct a url for vizql including what parameters can be sent and what values they can have or
 * will default to.
 *
 * NOTE-jrockwood-2021-12-02: There is also a {@link VizUrl} class and it might be confusing on the
 * difference between the two.
 *
 * VizUrl - used to parse and construct valid URLs that point to a viz in a particular mode (viewing
 * vs. authoring). It ensures that query parameters are correctly encoded, but it is ignorant of any
 * semantic meaning assigned to query (search) parameters. The plan is to move this into it's own
 * module that will be used in this code and in the VizClient core code.
 *
 * EmbeddingUrl - this class knows how to assemble query parameters specific to the embedding use
 * cases. It uses VizUrl as part of its implementation to ensure that the mode (viewing vs.
 * authoring) is correct.
 */
export declare function createVizUrl(src: string | null, mode: EmbeddingUrlMode, vizOptions: VizSettings | VizAuthoringSettings, embeddingId: number, filters: FilterParameters[], params: VizParameter[], customParams: CustomParameter[]): URL;
//# sourceMappingURL=EmbeddingVizUrl.d.ts.map