"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const Contract = __importStar(require("@tableau/api-external-contract-js"));
const api_shared_js_1 = require("@tableau/api-shared-js");
const Sheet_1 = require("./Sheet");
const StoryPoint_1 = require("./StoryPoint");
const StoryPointInfo_1 = require("./StoryPointInfo");
class Story extends Sheet_1.Sheet {
    constructor(_storyImpl, _workbookImpl) {
        super(_storyImpl, _workbookImpl);
        this._storyImpl = _storyImpl;
    }
    get activeStoryPoint() {
        if (!this._storyImpl.activeStoryPoint) {
            throw new api_shared_js_1.TableauError(Contract.EmbeddingErrorCodes.ImplementationError, 'Active story point has not been initialized');
        }
        return new StoryPoint_1.StoryPoint(this._storyImpl.activeStoryPoint, this._workbookImpl);
    }
    get storyPointsInfo() {
        return this._storyImpl.storyPointsInfo.map((storyPointInfoImpl) => {
            return new StoryPointInfo_1.StoryPointInfo(storyPointInfoImpl, this._workbookImpl);
        });
    }
    activateNextStoryPointAsync() {
        return this._storyImpl.activateNextStoryPointAsync().then((storyPointImpl) => {
            return new StoryPoint_1.StoryPoint(storyPointImpl, this._workbookImpl);
        });
    }
    activatePreviousStoryPointAsync() {
        return this._storyImpl.activatePreviousStoryPointAsync().then((storyPointImpl) => {
            return new StoryPoint_1.StoryPoint(storyPointImpl, this._workbookImpl);
        });
    }
    activateStoryPointAsync(index) {
        return this._storyImpl.activateStoryPointAsync(index).then((storyPointImpl) => {
            return new StoryPoint_1.StoryPoint(storyPointImpl, this._workbookImpl);
        });
    }
    revertStoryPointAsync(index) {
        return this._storyImpl.revertStoryPointAsync(index).then((storyPointInfoImpl) => {
            return new StoryPointInfo_1.StoryPointInfo(storyPointInfoImpl, this._workbookImpl);
        });
    }
}
exports.Story = Story;
//# sourceMappingURL=Story.js.map