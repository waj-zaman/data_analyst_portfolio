"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const Contract = __importStar(require("@tableau/api-external-contract-js"));
const api_shared_js_1 = require("@tableau/api-shared-js");
const Workbook_1 = require("./Workbook");
class Sheet {
    constructor(_sheetImpl, _workbookImpl) {
        this._sheetImpl = _sheetImpl;
        this._workbookImpl = _workbookImpl;
    }
    get isHidden() {
        return this._sheetImpl.hidden;
    }
    get isActive() {
        return this._sheetImpl.active;
    }
    get name() {
        return this._sheetImpl.name;
    }
    get sheetType() {
        return this._sheetImpl.sheetType;
    }
    get size() {
        if (api_shared_js_1.SheetUtils.isValidSheetSize(this._sheetImpl.size)) {
            return this._sheetImpl.size;
        }
        throw new api_shared_js_1.TableauError(Contract.EmbeddingErrorCodes.NotImplemented, 'Not implemented');
    }
    get url() {
        if (this.isHidden) {
            throw new api_shared_js_1.TableauError(Contract.EmbeddingErrorCodes.NoUrlForHiddenWorksheet, 'No URL for hidden worksheet');
        }
        return this._sheetImpl.url;
    }
    get index() {
        return this._sheetImpl.index;
    }
    get workbook() {
        return new Workbook_1.Workbook(this._workbookImpl);
    }
    changeSizeAsync(newSize) {
        return this._sheetImpl.changeSizeAsync(newSize);
    }
}
exports.Sheet = Sheet;
//# sourceMappingURL=Sheet.js.map