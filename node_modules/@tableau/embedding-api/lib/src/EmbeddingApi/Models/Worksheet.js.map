{"version":3,"file":"Worksheet.js","sourceRoot":"","sources":["../../../../src/EmbeddingApi/Models/Worksheet.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Contract from '@tableau/api-external-contract-js';\nimport { WorksheetImpl } from '@tableau/api-shared-js';\nimport { EmbeddingWorkbookImpl } from '../Impl/EmbeddingWorkbookImpl';\nimport { Dashboard } from './Dashboard';\nimport { Sheet } from './Sheet';\nimport { StoryPoint } from './StoryPoint';\n\nexport class Worksheet extends Sheet implements Contract.EmbeddingWorksheet {\n  public constructor(private _worksheetImpl: WorksheetImpl, _workbookImpl: EmbeddingWorkbookImpl) {\n    super(_worksheetImpl, _workbookImpl);\n  }\n\n  public get parentDashboard(): Contract.EmbeddingDashboard | null {\n    if (this._worksheetImpl.parentDashboard == null) {\n      // Worksheet doesn't belong to a dashboard. Return null.\n      return null;\n    }\n    return new Dashboard(this._worksheetImpl.parentDashboard, this._workbookImpl);\n  }\n\n  public get parentStoryPoint(): Contract.StoryPoint | null {\n    if (this._worksheetImpl.parentStoryPoint == null) {\n      // Worksheet doesn't belong to a story point. Return null.\n      return null;\n    }\n\n    return new StoryPoint(this._worksheetImpl.parentStoryPoint, this._workbookImpl);\n  }\n\n  public getDataSourcesAsync(): Promise<Array<Contract.DataSource>> {\n    return this._worksheetImpl.getDataSourcesAsync();\n  }\n\n  public getSummaryDataAsync(options: Contract.GetSummaryDataOptions): Promise<Contract.DataTable> {\n    return this._worksheetImpl.getSummaryDataAsync(options);\n  }\n\n  public getSummaryDataReaderAsync(pageRowCount: number, options: Contract.GetSummaryDataOptions): Promise<Contract.DataTableReader> {\n    return this._worksheetImpl.getSummaryDataReaderAsync(pageRowCount, options);\n  }\n\n  public getSummaryColumnsInfoAsync(): Promise<Array<Contract.Column>> {\n    return this._worksheetImpl.getSummaryColumnsInfoAsync();\n  }\n\n  public getUnderlyingDataAsync(options: Contract.GetUnderlyingDataOptions): Promise<Contract.DataTable> {\n    console.warn(\n      'Worksheet.getUnderlyingDataAsync is deprecated. Please use ' +\n        'Worksheet.getUnderlyingTablesAsync and Worksheet.getUnderlyingTableDataAsync',\n    );\n    return this._worksheetImpl.getUnderlyingDataAsync(options);\n  }\n\n  public getUnderlyingTablesAsync(): Promise<Array<Contract.LogicalTable>> {\n    return this._worksheetImpl.getUnderlyingTablesAsync();\n  }\n\n  public getUnderlyingTableDataAsync(logicalTableId: string, options: Contract.GetUnderlyingDataOptions): Promise<Contract.DataTable> {\n    return this._worksheetImpl.getUnderlyingTableDataAsync(logicalTableId, options);\n  }\n\n  public getUnderlyingTableDataReaderAsync(\n    logicalTableId: string,\n    pageRowCount: number,\n    options: Contract.GetUnderlyingDataOptions,\n  ): Promise<Contract.DataTableReader> {\n    return this._worksheetImpl.getUnderlyingTableDataReaderAsync(logicalTableId, pageRowCount, options);\n  }\n\n  public getFiltersAsync(): Promise<Array<Contract.Filter>> {\n    return this._worksheetImpl.getFiltersAsync();\n  }\n\n  public applyFilterAsync(\n    fieldName: string,\n    values: Array<string>,\n    updateType: Contract.FilterUpdateType,\n    options: Contract.FilterOptions,\n  ): Promise<string> {\n    return this._worksheetImpl.applyFilterAsync(fieldName, values, updateType, options);\n  }\n\n  public applyRangeFilterAsync(fieldName: string, filterOptions: Contract.RangeFilterOptions): Promise<string> {\n    return this._worksheetImpl.applyRangeFilterAsync(fieldName, filterOptions);\n  }\n\n  public clearFilterAsync(fieldName: string): Promise<string> {\n    return this._worksheetImpl.clearFilterAsync(fieldName);\n  }\n\n  public applyRelativeDateFilterAsync(fieldName: string, options: Contract.RelativeDateFilterOptions): Promise<string> {\n    return this._worksheetImpl.applyRelativeDateFilterAsync(fieldName, options);\n  }\n\n  public applyHierarchicalFilterAsync(\n    fieldName: string,\n    values: Array<string>,\n    updateType: Contract.FilterUpdateType,\n    options: Contract.FilterOptions,\n  ): Promise<string> {\n    return this._worksheetImpl.applyHierarchicalFilterAsync(fieldName, values, updateType, options);\n  }\n\n  public clearSelectedMarksAsync(): Promise<void> {\n    return this._worksheetImpl.clearSelectedMarksAsync();\n  }\n\n  public getSelectedMarksAsync(): Promise<Contract.MarksCollection> {\n    return this._worksheetImpl.getSelectedMarksAsync();\n  }\n\n  public annotateMarkAsync(mark: Contract.MarkInfo, annotationText: string): Promise<void> {\n    return this._worksheetImpl.annotateMarkAsync(mark, annotationText);\n  }\n\n  public getAnnotationsAsync(): Promise<Array<Contract.Annotation>> {\n    return this._worksheetImpl.getAnnotationsAsync();\n  }\n\n  public removeAnnotationAsync(annotation: Contract.Annotation): Promise<void> {\n    return this._worksheetImpl.removeAnnotationAsync(annotation);\n  }\n\n  public selectMarksByValueAsync(\n    selections: Array<Contract.SelectionCriteria>,\n    selectionUpdateType: Contract.SelectionUpdateType,\n  ): Promise<void> {\n    return this._worksheetImpl.selectMarksByValueAsync(selections, selectionUpdateType);\n  }\n\n  public appendContextMenuAsync(targetMenu: Contract.ApiMenuType, config: Contract.ContextMenuOptions): Promise<string> {\n    return this._worksheetImpl.appendContextMenuAsync(targetMenu, config);\n  }\n\n  public removeContextMenuAsync(targetMenu: Contract.ApiMenuType, menuItemId: string): Promise<void> {\n    return this._worksheetImpl.removeContextMenuAsync(targetMenu, menuItemId);\n  }\n\n  public executeContextMenuAsync(targetMenu: Contract.ApiMenuType, menuItemId: string): Promise<void> {\n    return this._worksheetImpl.executeContextMenuAsync(targetMenu, menuItemId);\n  }\n\n  public renameContextMenuAsync(targetMenu: Contract.ApiMenuType, menuHeader: string, menuDescription: string): Promise<void> {\n    return this._worksheetImpl.renameContextMenuAsync(targetMenu, menuHeader, menuDescription);\n  }\n\n  public getVisualSpecificationAsync(): Promise<Contract.VisualSpecification> {\n    return this._worksheetImpl.getVisualSpecificationAsync();\n  }\n\n  public addMarksCardFieldsAsync(\n    marksCardIndex: number,\n    encodingType: Contract.EncodingType,\n    columns: Array<Contract.Column>,\n    startIndex: number,\n  ): Promise<void> {\n    return this._worksheetImpl.addMarksCardFieldsAsync(marksCardIndex, encodingType, columns, startIndex);\n  }\n\n  public moveMarksCardFieldAsync(marksCardIndex: number, fromIndex: number, toIndex: number, fieldCount: number): Promise<void> {\n    return this._worksheetImpl.moveMarksCardFieldAsync(marksCardIndex, fromIndex, toIndex, fieldCount);\n  }\n\n  public spliceMarksCardFieldsAsync(\n    marksCardIndex: number,\n    encodingType: Contract.EncodingType,\n    startIndex: number,\n    deleteCount: number,\n    columns: Array<Contract.Column>,\n  ): Promise<void> {\n    return this._worksheetImpl.spliceMarksCardFieldsAsync(marksCardIndex, encodingType, startIndex, deleteCount, columns);\n  }\n}\n"]}