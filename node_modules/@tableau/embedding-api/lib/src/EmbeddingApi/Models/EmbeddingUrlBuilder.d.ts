import { AskDataSettings, CustomParameter, PulseSettings, VizAuthoringSettings, VizSettings } from '@tableau/api-external-contract-js';
import { AskDataOptionNames, PulseOptionNames, VizOptionNames } from '@tableau/api-internal-contract-js';
export declare type ParametersMap = Map<VizOptionNames | AskDataOptionNames | PulseOptionNames, string>;
export declare const SANITIZED_VALUES: {
    readonly YES_VALUE: "y";
    readonly NO_VALUE: "n";
};
export declare abstract class EmbeddingUrlBuilder {
    private _token?;
    protected _url: URL;
    protected _optionNames: typeof VizOptionNames | typeof AskDataOptionNames | typeof PulseOptionNames;
    protected abstract sanitizeParameterValue(parameterName: string, value: unknown): string;
    build(): URL;
    /**
     * Appends the non-empty parameters to the URL, preserving parameters that already exist.
     * @param defaultParameters The map of key/value pairs to append to the search params.
     * @returns This object, so you can chain calls.
     */
    appendDefaultParameters(defaultParameters: ParametersMap): this;
    /**
     * Appends the user-supplied options to the search params. Only known options will be passed
     * through. All unknown options are ignored.
     * @param options The options to set on the search params.
     * @returns This object, so you can chain calls.
     */
    appendUserOptions(options: AskDataSettings | VizSettings | VizAuthoringSettings | PulseSettings): this;
    appendCustomParams(customParams: CustomParameter[]): this;
    setToken(token?: string): this;
    protected sanitizeValue(v: unknown): string;
}
export declare function validateUrl(url: URL): void;
export declare function getSiteIdForPulse(url: URL | string): string;
export declare function getSiteId(url: URL | string): string;
/**
 * This canonicalizes any URL that contains '/#/site' or '/#/'.
 * Examples:
 * 'https://tableau.com/#/site/alpodev/views/Workbook/Sheet' would return 'https://tableau.com/t/alpodev/views/Workbook/Sheet';
 * 'https://tableau.com/#/views/Workbook/Sheet' would return 'https://tableau.com/views/Workbook/Sheet'.
 */
export declare function canonicalizeVizPortalRoutingHashes(url: URL): URL;
//# sourceMappingURL=EmbeddingUrlBuilder.d.ts.map