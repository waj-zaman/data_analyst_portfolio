{"version":3,"file":"FilterChangedEvent.js","sourceRoot":"","sources":["../../../../src/EmbeddingApi/Events/FilterChangedEvent.ts"],"names":[],"mappings":";;AACA,gFAAmG;AACnG,0DAAsD;AACtD,mEAAgE;AAEhE,MAAa,kBAAmB,SAAQ,6CAAqB;IAC3D,YAAmB,SAAsC,EAAU,UAAkB,EAAU,QAAiB;QAC9G,KAAK,CAAC,oDAAyB,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;QADO,eAAU,GAAV,UAAU,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAS;IAEhH,CAAC;IAED,IAAW,SAAS;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,IAAW,OAAO;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEM,cAAc;QACnB,OAAO,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,IAAI,CAAkB,CAAC,OAAO,EAAE,EAAE;YACxE,0EAA0E;YAC1E,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO;gBAChC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC;gBACjE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YAExE,IAAI,CAAC,aAAa,EAAE;gBAClB,yEAAyE;gBACzE,8BAA8B;gBAC9B,MAAM,IAAI,4BAAY,CAAC,8CAAmB,CAAC,6BAA6B,EAAE,uBAAuB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACtH;YAED,OAAO,aAAa,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AA7BD,gDA6BC","sourcesContent":["import * as Contract from '@tableau/api-external-contract-js';\nimport { EmbeddingErrorCodes, EmbeddingTableauEventType } from '@tableau/api-external-contract-js';\nimport { TableauError } from '@tableau/api-shared-js';\nimport { TableauWorksheetEvent } from './TableauWorksheetEvent';\n\nexport class FilterChangedEvent extends TableauWorksheetEvent implements Contract.EmbeddingFilterChangedEvent {\n  public constructor(worksheet: Contract.EmbeddingWorksheet, private _fieldName: string, private _fieldId?: string) {\n    super(EmbeddingTableauEventType.FilterChanged, worksheet);\n  }\n\n  public get fieldName(): string {\n    return this._fieldName;\n  }\n\n  public get fieldId(): string | undefined {\n    return this._fieldId;\n  }\n\n  public getFilterAsync(): Promise<Contract.Filter> {\n    return this.worksheet.getFiltersAsync().then<Contract.Filter>((filters) => {\n      // TODO: Filtering of the filters should eventually be done platform side.\n      const eventedFilter = this.fieldId\n        ? filters.find((filter) => filter.fieldId === this.fieldId, this)\n        : filters.find((filter) => filter.fieldName === this.fieldName, this);\n\n      if (!eventedFilter) {\n        // We shouldn't hit this unless the filter was removed from the worksheet\n        // after the event was raised.\n        throw new TableauError(EmbeddingErrorCodes.FilterMissingOrNotImplemented, `Cannot find filter: ${this._fieldName}.`);\n      }\n\n      return eventedFilter;\n    });\n  }\n}\n"]}