"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const api_external_contract_js_1 = require("@tableau/api-external-contract-js");
const api_shared_js_1 = require("@tableau/api-shared-js");
const TableauWorksheetEvent_1 = require("./TableauWorksheetEvent");
class FilterChangedEvent extends TableauWorksheetEvent_1.TableauWorksheetEvent {
    constructor(worksheet, _fieldName, _fieldId) {
        super(api_external_contract_js_1.EmbeddingTableauEventType.FilterChanged, worksheet);
        this._fieldName = _fieldName;
        this._fieldId = _fieldId;
    }
    get fieldName() {
        return this._fieldName;
    }
    get fieldId() {
        return this._fieldId;
    }
    getFilterAsync() {
        return this.worksheet.getFiltersAsync().then((filters) => {
            // TODO: Filtering of the filters should eventually be done platform side.
            const eventedFilter = this.fieldId
                ? filters.find((filter) => filter.fieldId === this.fieldId, this)
                : filters.find((filter) => filter.fieldName === this.fieldName, this);
            if (!eventedFilter) {
                // We shouldn't hit this unless the filter was removed from the worksheet
                // after the event was raised.
                throw new api_shared_js_1.TableauError(api_external_contract_js_1.EmbeddingErrorCodes.FilterMissingOrNotImplemented, `Cannot find filter: ${this._fieldName}.`);
            }
            return eventedFilter;
        });
    }
}
exports.FilterChangedEvent = FilterChangedEvent;
//# sourceMappingURL=FilterChangedEvent.js.map