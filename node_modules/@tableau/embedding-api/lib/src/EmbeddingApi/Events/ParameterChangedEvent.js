"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const api_external_contract_js_1 = require("@tableau/api-external-contract-js");
const api_shared_js_1 = require("@tableau/api-shared-js");
const Parameter_1 = require("../Models/Parameter");
class ParameterChangedEvent {
    constructor(_globalFieldName, _embeddingId) {
        this._globalFieldName = _globalFieldName;
        this._embeddingId = _embeddingId;
    }
    getParameterAsync() {
        // Call down to our service to get the parameter back via its field name
        const service = api_shared_js_1.ApiServiceRegistry.get(this._embeddingId).getService("parameters-service" /* Parameters */);
        return service.findParameterByGlobalFieldNameAsync(this._globalFieldName).then((parameterImpl) => {
            if (parameterImpl === undefined) {
                throw new api_shared_js_1.TableauError(api_external_contract_js_1.EmbeddingErrorCodes.MissingParameter, `Cannot find parameter: ${this._globalFieldName}`);
            }
            return new Parameter_1.Parameter(parameterImpl);
        });
    }
}
exports.ParameterChangedEvent = ParameterChangedEvent;
//# sourceMappingURL=ParameterChangedEvent.js.map