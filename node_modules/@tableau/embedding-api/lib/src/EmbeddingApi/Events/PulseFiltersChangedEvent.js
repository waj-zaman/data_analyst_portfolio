"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const Contract = __importStar(require("@tableau/api-external-contract-js"));
const api_shared_js_1 = require("@tableau/api-shared-js");
class PulseFiltersChangedEvent {
    constructor(fieldNames, embeddingId) {
        this._fieldNames = fieldNames;
        this._embeddingId = embeddingId;
    }
    get fieldNames() {
        return this._fieldNames;
    }
    getFiltersAsync() {
        const service = api_shared_js_1.ApiServiceRegistry.get(this._embeddingId).getService("PulseService" /* PulseService */);
        return service.getFiltersAsync().then((filters) => {
            const eventedFilters = [];
            const missingFields = [];
            for (const fieldName of this._fieldNames) {
                const eventedFilter = filters.find((filter) => filter.fieldName === fieldName);
                if (eventedFilter) {
                    eventedFilters.push(eventedFilter);
                }
                else {
                    missingFields.push(fieldName);
                }
            }
            if (missingFields.length) {
                throw new api_shared_js_1.TableauError(Contract.EmbeddingErrorCodes.FilterMissingOrNotImplemented, `Cannot find filter(s): ${missingFields.join(', ')}.`);
            }
            return eventedFilters;
        });
    }
}
exports.PulseFiltersChangedEvent = PulseFiltersChangedEvent;
//# sourceMappingURL=PulseFiltersChangedEvent.js.map