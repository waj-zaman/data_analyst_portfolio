"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const api_external_contract_js_1 = require("@tableau/api-external-contract-js");
const api_internal_contract_js_1 = require("@tableau/api-internal-contract-js");
const api_shared_js_1 = require("@tableau/api-shared-js");
class EmbeddingVizApiServiceImpl extends api_shared_js_1.ServiceImplBase {
    get serviceName() {
        return "EmbeddingVizApiService" /* EmbeddingVizApiService */;
    }
    getEmbeddingVizStateWithDataModelAsync() {
        const verb = api_internal_contract_js_1.VerbId.GetVizStateWithDataModel;
        const parameters = {
            [api_internal_contract_js_1.ParameterId.FunctionName]: 'getVizStateWithDataModel',
        };
        return this.execute(verb, parameters).then((response) => {
            const serverPm = response.result;
            this.checkForErrorParameter(serverPm);
            let vsdm = {
                vizStateWithDataModel: serverPm[api_internal_contract_js_1.ParameterId.VizAPIStateWithDataModel],
            };
            return vsdm;
        });
    }
    checkForErrorParameter(serverPm) {
        if (serverPm[api_internal_contract_js_1.ParameterId.VizAPIStateWarningMsg]) {
            throw new api_shared_js_1.TableauError(api_external_contract_js_1.ErrorCodes.InternalError, serverPm[api_internal_contract_js_1.ParameterId.VizAPIStateWarningMsg]);
        }
    }
    setEmbeddingVizStateWithDataModelAsync(vizStateWithDataModel) {
        const verb = api_internal_contract_js_1.VerbId.SetVizStateWithDataModel;
        const parameters = {
            [api_internal_contract_js_1.ParameterId.FunctionName]: 'setVizStateWithDataModel',
            [api_internal_contract_js_1.ParameterId.VizAPIStateWithDataModel]: vizStateWithDataModel.vizStateWithDataModel,
        };
        return this.execute(verb, parameters).then((response) => {
            if (Object.keys(response.result).length !== 0) {
                const errorMsg = response.result;
                throw new api_shared_js_1.TableauError(api_external_contract_js_1.ErrorCodes.InternalError, errorMsg);
            }
            return;
        });
    }
    getEmbeddingAbstractQueryAsync() {
        const verb = api_internal_contract_js_1.VerbId.GetEmbeddingAbstractQueryWithDataModel;
        const parameters = {
            [api_internal_contract_js_1.ParameterId.FunctionName]: 'getEmbeddingAbstractQuery',
        };
        return this.execute(verb, parameters).then((response) => {
            const externalAbstractQuery = response.result;
            return externalAbstractQuery;
        });
    }
}
exports.EmbeddingVizApiServiceImpl = EmbeddingVizApiServiceImpl;
//# sourceMappingURL=EmbeddingVizApiServiceImpl.js.map