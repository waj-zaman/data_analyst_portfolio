export declare type PromiseFactory<T> = () => PromiseLike<T>;
/**
 * A custom promise queue that serializes execution of multiple promises.
 *
 * @export
 * @class PromiseQueue
 */
export declare class PromiseQueue {
    private queue;
    private pending;
    private concurrency;
    /**
     * Creates an instance of PromiseQueue.
     */
    constructor();
    /**
     * Add a function that returns a promise to the queue.
     *
     * @template T
     * @param {PromiseFactory<T>} func
     * @return {*}  {Promise<T>}
     * @memberof PromiseQueue
     */
    add<T>(func: PromiseFactory<T>): Promise<T>;
    poll(): void;
    size(): number;
}
//# sourceMappingURL=PromiseQueue.d.ts.map