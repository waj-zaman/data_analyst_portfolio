"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const Contract = __importStar(require("@tableau/api-external-contract-js"));
const api_internal_contract_js_1 = require("@tableau/api-internal-contract-js");
const AuthoringWorkbook_1 = require("../Models/AuthoringWorkbook");
const EmbeddingVizUrl_1 = require("../Models/EmbeddingVizUrl");
const TableauVizBase_1 = require("./TableauVizBase");
/**
 * Represents the entry point for the `<tableau-authoring-viz>` custom HTML element.
 * This class is specifically focused on transferring information between the HTML and
 * the Viz, so it should have as little logic as possible.  Most of the logic should be
 * in {@link VizImpl}.
 */
class TableauAuthoringViz extends TableauVizBase_1.TableauVizBase {
    // ========================================== Begin Custom Element definition ==========================================
    //#region Reactions
    static get observedAttributes() {
        // Take caution before adding to this list because for every observed attribute change
        // we unregister and re-render the viz
        return [...super.observedAttributes, ...Object.values(Contract.VizAuthoringAttributes)];
    }
    //#endregion Reaction
    getAttributeEvents() {
        return [
            [Contract.VizSharedAttributes.OnEditInDesktopButtonClicked, Contract.EmbeddingTableauEventType.EditInDesktopButtonClicked],
            [Contract.VizSharedAttributes.OnFirstInteractive, Contract.EmbeddingTableauEventType.FirstInteractive],
            [Contract.VizSharedAttributes.OnFirstVizSizeKnown, Contract.EmbeddingTableauEventType.FirstVizSizeKnown],
            [Contract.VizAuthoringAttributes.OnWorkbookPublished, Contract.EmbeddingTableauEventType.WorkbookPublished],
            [Contract.VizAuthoringAttributes.OnWorkbookPublishedAs, Contract.EmbeddingTableauEventType.WorkbookPublishedAs],
            [Contract.VizAuthoringAttributes.OnWorkbookReadyToClose, Contract.EmbeddingTableauEventType.WorkbookReadyToClose],
            [Contract.VizAttributes.OnReadyToReceiveAuthToken, Contract.EmbeddingTableauEventType.ReadyToReceiveAuthToken],
        ];
    }
    createFrameUrlWithParams() {
        const vizqlOptions = this.constructVizqlOptions();
        const customParams = this.readCustomParamsFromChildren();
        return EmbeddingVizUrl_1.createVizUrl(this.src, EmbeddingVizUrl_1.EmbeddingUrlMode.Authoring, vizqlOptions, this._embeddingIdCounter, [] /* filters */, [] /* params */, customParams);
    }
    constructVizqlOptions() {
        const options = {
            token: this.token,
            touchOptimize: this.touchOptimize,
            hideEditInDesktopButton: this.hideEditInDesktopButton,
            suppressDefaultEditBehavior: this.suppressDefaultEditBehavior,
            hideCloseButton: this.hideCloseButton,
            debug: this.debug,
            iframeAuth: this.iframeAuth,
        };
        return options;
    }
    getRegisteredEvents() {
        return super.getRegisteredEvents().concat([
            [
                api_internal_contract_js_1.NotificationId.WorkbookPublished,
                () => true,
                () => this.dispatchEvent(new CustomEvent(Contract.EmbeddingTableauEventType.WorkbookPublished)),
            ],
            [api_internal_contract_js_1.NotificationId.WorkbookPublishedAs, () => true, (model) => this.handleWorkbookPublishedAsEvent(model)],
            [
                api_internal_contract_js_1.NotificationId.WorkbookReadyToClose,
                () => true,
                () => this.dispatchEvent(new CustomEvent(Contract.EmbeddingTableauEventType.WorkbookReadyToClose)),
            ],
        ]);
    }
    handleWorkbookPublishedAsEvent(model) {
        const workbookPublishedAsEvent = {
            newUrl: model.newUrl,
        };
        this.dispatchEvent(new CustomEvent(Contract.EmbeddingTableauEventType.WorkbookPublishedAs, { detail: workbookPublishedAsEvent }));
    }
    //#region Simple Getters / Setters
    set hideCloseButton(v) {
        if (v) {
            this.setAttribute(Contract.VizAuthoringAttributes.HideCloseButton, '');
        }
        else {
            this.removeAttribute(Contract.VizAuthoringAttributes.HideCloseButton);
        }
    }
    get hideCloseButton() {
        return this.hasAttribute(Contract.VizAuthoringAttributes.HideCloseButton);
    }
    //#endregion
    get workbook() {
        return new AuthoringWorkbook_1.AuthoringWorkbook(this.vizImpl.workbookImpl, this.vizImpl.embeddingId);
    }
    setAuthToken(token) {
        this.vizImpl.setAuthToken(token);
    }
}
exports.TableauAuthoringViz = TableauAuthoringViz;
//# sourceMappingURL=TableauAuthoringViz.js.map