import * as Contract from '@tableau/api-external-contract-js';
import { TableauDialogType } from '@tableau/api-external-contract-js/lib/src/ExternalContract/Embedding/Enums';
import { AttributeEventType, EventHandlerFn, TableauVizBase } from './TableauVizBase';
/**
 * Represents the entry point for the `<tableau-viz>` custom HTML element.
 * This class is specifically focused on transferring information between the HTML and
 * the Viz, so it should have as little logic as possible.  Most of the logic should be
 * in {@link VizImpl}.
 */
export declare class TableauViz extends TableauVizBase implements Contract.Viz {
    private preInitFilters;
    private readFiltersFromChild;
    private readParametersFromChild;
    static get observedAttributes(): string[];
    disconnectedCallback(): void;
    protected createFrameUrlWithParams(): URL;
    private constructVizqlOptions;
    protected getAttributeEvents(): AttributeEventType[];
    protected getRegisteredEvents(): EventHandlerFn[];
    private shouldNotifyEvent;
    private handleSelectedMarksChangedEvent;
    private handleFilterChangedEvent;
    private handleSummaryDataChangedEvent;
    private handleEditButtonClicked;
    private handleCustomMarkClickedContextMenuEvent;
    private handleParameterChangedEvent;
    private handleUrlAction;
    private handleStoryPointSwitch;
    private getWorksheetForNotificationHandler;
    get disableUrlActionsPopups(): boolean;
    set disableUrlActionsPopups(v: boolean);
    get hideTabs(): boolean;
    set hideTabs(v: boolean);
    get toolbar(): Contract.Toolbar;
    set toolbar(v: Contract.Toolbar);
    get instanceIdToClone(): string | undefined;
    set instanceIdToClone(v: string | undefined);
    get device(): Contract.DeviceType;
    set device(v: Contract.DeviceType);
    get hideEditButton(): boolean;
    set hideEditButton(v: boolean);
    get automaticUpdatesArePaused(): boolean;
    pauseAutomaticUpdatesAsync(): Promise<void>;
    resumeAutomaticUpdatesAsync(): Promise<void>;
    toggleAutomaticUpdatesAsync(): Promise<void>;
    revertAllAsync(): Promise<void>;
    refreshDataAsync(): Promise<void>;
    exportImageAsync(): Promise<void>;
    exportCrosstabAsync(sheetName: string, format: Contract.CrosstabFileFormat): Promise<void>;
    exportDataAsync(sheetName: string, options?: Contract.ExportDataOptions): Promise<void>;
    exportPowerPointAsync(sheetNames?: Array<string>): Promise<void>;
    exportPDFAsync(sheetNames?: Array<string>, options?: Contract.ExportPDFOptions): Promise<void>;
    displayDialogAsync(dialogType: TableauDialogType): Promise<void>;
    redoAsync(): Promise<void>;
    undoAsync(): Promise<void>;
    setAuthToken(token: string): void;
    addFilter(fieldName: string, value: string): void;
    /**
     * This is the public entry point for users to get a reference to the whole data model
     */
    get workbook(): Contract.EmbeddingWorkbook;
}
//# sourceMappingURL=TableauViz.d.ts.map