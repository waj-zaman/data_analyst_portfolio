{"version":3,"file":"PulseImpl.js","sourceRoot":"","sources":["../../../../src/EmbeddingApi/Impl/PulseImpl.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Contract from '@tableau/api-external-contract-js';\nimport {\n  CrossFrameMessenger,\n  EmbeddingPulseBootstrapInfo,\n  FirstPulseMetricSizeKnownEvent as FirstPulseMetricSizeKnownModel,\n  InternalApiDispatcher,\n  NotificationId,\n  PulseErrorEvent as PulseErrorModel,\n  PulseFiltersChangedEvent as PulseFiltersChangedModel,\n  PulseInsightDiscoveredEvent as PulseInsightDiscoveredModel,\n  PulseTimeDimensionChangedEvent as PulseTimeDimensionChangedModel,\n  PulseUrlChangedEvent as PulseUrlChangedModel,\n} from '@tableau/api-internal-contract-js';\nimport {\n  ApiServiceRegistry,\n  CrossFrameDispatcher,\n  NotificationService,\n  NotificationServiceImpl,\n  ServiceNames,\n  TableauError,\n} from '@tableau/api-shared-js';\nimport { TableauPulse } from '../Components/TableauPulse';\nimport { FirstPulseMetricSizeKnownEvent } from '../Events/FirstPulseMetricSizeKnownEvent';\nimport { PulseErrorEvent } from '../Events/PulseErrorEvent';\nimport { PulseFiltersChangedEvent } from '../Events/PulseFiltersChangedEvent';\nimport { PulseInsightDiscoveredEvent } from '../Events/PulseInsightDiscoveredEvent';\nimport { PulseTimeDimensionChangedEvent } from '../Events/PulseTimeDimensionChangedEvent';\nimport { PulseUrlChangedEvent } from '../Events/PulseUrlChangedEvent';\nimport { EmbeddingServiceNames, registerInitializationEmbeddingServices } from '../Services';\nimport { PulseServiceImpl } from '../Services/Impl/PulseServiceImpl';\nimport { PulseService } from '../Services/PulseService';\nimport { HtmlElementHelpers } from '../Utils/HtmlElementHelpers';\n\nexport class PulseImpl {\n  private _dispatcher: InternalApiDispatcher;\n  private _messenger: CrossFrameMessenger;\n  private readonly _resizeEventType = 'resize';\n  private _windowResizeHandler?: () => void;\n  private _shouldDispatchMetricSizeKnownEvent: boolean;\n\n  public constructor(\n    private _pulse: TableauPulse,\n    private _iframe: HTMLIFrameElement,\n    private _frameUrl: URL,\n    private _timeDimension: Contract.PulseTimeDimension | undefined,\n    private _filters: Array<Contract.FilterParameters>,\n    private _embeddingId: number,\n  ) {\n    if (!this._iframe) {\n      throw new TableauError(Contract.EmbeddingErrorCodes.InternalError, 'Iframe has not been created yet');\n    }\n\n    // When an initial time dimension or filters are provided, we delay the dispatching of the FirstPulseMetricSizeKnownEvent\n    // until after they've been applied and the PulseFirstInteractive event of the ultimate metric fires.\n    // If no time dimension or filters are provided, we dispatch the event normally.\n    this._shouldDispatchMetricSizeKnownEvent = !_timeDimension && !_filters.length;\n  }\n\n  public get iframe(): HTMLIFrameElement {\n    return this._iframe;\n  }\n\n  public get embeddingId(): number {\n    return this._embeddingId;\n  }\n\n  public initialize(): void {\n    const iframeWindow = this._iframe.contentWindow;\n    if (!iframeWindow) {\n      throw new TableauError(Contract.EmbeddingErrorCodes.InternalError, 'Iframe has not been created yet');\n    }\n    try {\n      this._messenger = new CrossFrameMessenger(window, iframeWindow, this._frameUrl.origin);\n      this._dispatcher = new CrossFrameDispatcher(this._messenger);\n\n      registerInitializationEmbeddingServices(this._dispatcher, this.embeddingId);\n\n      const initializationService = ApiServiceRegistry.get(this.embeddingId).getService<NotificationService>(ServiceNames.Initialization);\n      const pulseMetricSizeKnownUnregister = initializationService.registerHandler(\n        NotificationId.FirstPulseMetricSizeKnown,\n        () => this._shouldDispatchMetricSizeKnownEvent,\n        (model: FirstPulseMetricSizeKnownModel) => {\n          this.handlePulseMetricSizeKnownEvent(model);\n          pulseMetricSizeKnownUnregister();\n        },\n      );\n      initializationService.registerHandler(\n        NotificationId.PulseInteractive,\n        () => true,\n        (model: EmbeddingPulseBootstrapInfo) => {\n          this.handlePulseInteractiveEvent(model);\n        },\n      );\n      initializationService.registerHandler(\n        NotificationId.PulseError,\n        () => true,\n        (model: PulseErrorModel) => {\n          this.handlePulseErrorEvent(model);\n        },\n      );\n      initializationService.registerHandler(\n        NotificationId.PulseUrlChanged,\n        () => true,\n        (model: PulseUrlChangedModel) => {\n          this.handlePulseUrlChangedEvent(model);\n        },\n      );\n      initializationService.registerHandler(\n        NotificationId.PulseTimeDimensionChanged,\n        () => true,\n        (model: PulseTimeDimensionChangedModel) => {\n          this.handlePulseTimeDimensionChangedEvent(model);\n        },\n      );\n      initializationService.registerHandler(\n        NotificationId.PulseInsightDiscovered,\n        () => true,\n        (model: PulseInsightDiscoveredModel) => {\n          this.handlePulseInsightDiscoveredEvent(model);\n        },\n      );\n      initializationService.registerHandler(\n        NotificationId.PulseFiltersChanged,\n        () => true,\n        (model: PulseFiltersChangedModel) => {\n          this.handlePulseFiltersChangedEvent(model);\n        },\n      );\n\n      this._messenger.startListening();\n    } catch (e) {\n      throw new TableauError(Contract.EmbeddingErrorCodes.InternalError, 'Unexpected error during initialization.');\n    }\n  }\n\n  public dispose(): void {\n    if (this._messenger) {\n      this._messenger.stopListening();\n    }\n\n    this.removeWindowResizeHandler();\n  }\n\n  private updateIframeTitle(bootstrapInfo: EmbeddingPulseBootstrapInfo): void {\n    this._iframe.setAttribute('title', bootstrapInfo.iframeTitle);\n  }\n\n  private handlePulseMetricSizeKnownEvent(model: FirstPulseMetricSizeKnownModel): void {\n    const sizeEvent = new FirstPulseMetricSizeKnownEvent(model.width, model.height);\n    this._pulse.dispatchEvent(new CustomEvent(Contract.EmbeddingTableauEventType.FirstPulseMetricSizeKnown, { detail: sizeEvent }));\n\n    if (this._pulse.fixedSize) {\n      return;\n    }\n\n    this.resize();\n    this.addWindowResizeHandler();\n  }\n\n  public resize(): void {\n    const { height, width } = this.calculateLayoutSize();\n\n    this._iframe.style.height = height + 'px';\n    this._iframe.style.width = width + 'px';\n  }\n\n  private calculateLayoutSize(): { height: number; width: number } {\n    const availableSize = this._pulse.parentElement\n      ? HtmlElementHelpers.getContentSize(this._pulse.parentElement)\n      : { height: 0, width: 0 };\n\n    return availableSize;\n  }\n\n  private removeWindowResizeHandler(): void {\n    if (!this._windowResizeHandler) {\n      return;\n    }\n\n    window.removeEventListener(this._resizeEventType, this._windowResizeHandler);\n  }\n\n  private addWindowResizeHandler(): void {\n    if (this._windowResizeHandler) {\n      return;\n    }\n\n    this._windowResizeHandler = this.resize.bind(this);\n    window.addEventListener(this._resizeEventType, this._windowResizeHandler!);\n  }\n\n  private handlePulseInteractiveEvent(bootstrapInfo: EmbeddingPulseBootstrapInfo): void {\n    ApiServiceRegistry.get(this.embeddingId).registerService(new PulseServiceImpl(this._dispatcher, this.embeddingId));\n    ApiServiceRegistry.get(this.embeddingId).registerService(new NotificationServiceImpl(this._dispatcher));\n\n    if (this._timeDimension) {\n      this.applyTimeDimensionAsync(this._timeDimension);\n\n      // Applying the time dimension will trigger a new interactive event, so we need to bail here.\n      // Time dimension is cleared so it doesn't try to apply again during the next interactive event.\n      this._timeDimension = undefined;\n      return;\n    }\n\n    if (this._filters.length) {\n      this.applyFiltersAsync(\n        this._filters.map((f) => ({\n          fieldName: f.field,\n          values: f.value.split(','),\n          updateType: Contract.FilterUpdateType.Replace,\n          options: { isExcludeMode: false },\n        })),\n      );\n\n      // Applying the filters will trigger a new interactive event, so we need to bail here.\n      // Filter list is cleared so they don't try to apply again during the next interactive event.\n      this._filters = [];\n      return;\n    }\n\n    this._iframe.style.visibility = 'visible';\n    this.updateIframeTitle(bootstrapInfo);\n\n    this._shouldDispatchMetricSizeKnownEvent = true;\n    this._pulse.dispatchEvent(new CustomEvent(Contract.EmbeddingTableauEventType.FirstInteractive));\n  }\n\n  private handlePulseErrorEvent(model: PulseErrorModel) {\n    const event = new PulseErrorEvent(model.message, model.httpStatus, model.messageVisibility);\n    this._pulse.dispatchEvent(new CustomEvent(Contract.EmbeddingTableauEventType.PulseError, { detail: event }));\n  }\n\n  private handlePulseUrlChangedEvent(model: PulseUrlChangedModel) {\n    const event = new PulseUrlChangedEvent(model.oldUrl, model.newUrl, model.context);\n    this._pulse.dispatchEvent(new CustomEvent(Contract.EmbeddingTableauEventType.PulseUrlChanged, { detail: event }));\n  }\n\n  private handlePulseTimeDimensionChangedEvent(model: PulseTimeDimensionChangedModel) {\n    const event = new PulseTimeDimensionChangedEvent(model.timeDimension);\n    this._pulse.dispatchEvent(new CustomEvent(Contract.EmbeddingTableauEventType.PulseTimeDimensionChanged, { detail: event }));\n  }\n\n  private handlePulseInsightDiscoveredEvent(model: PulseInsightDiscoveredModel) {\n    const event = new PulseInsightDiscoveredEvent(\n      model.id,\n      model.characterization,\n      model.markup,\n      model.question,\n      model.score,\n      model.type,\n      model.version,\n    );\n\n    this._pulse.dispatchEvent(new CustomEvent(Contract.EmbeddingTableauEventType.PulseInsightDiscovered, { detail: event }));\n  }\n\n  private handlePulseFiltersChangedEvent(model: PulseFiltersChangedModel) {\n    const event = new PulseFiltersChangedEvent(model.fieldNames, this.embeddingId);\n    this._pulse.dispatchEvent(new CustomEvent(Contract.EmbeddingTableauEventType.PulseFiltersChanged, { detail: event }));\n  }\n\n  public applyFiltersAsync(\n    filters: Array<{\n      fieldName: string;\n      values: Contract.PulseFieldValueArray;\n      updateType: Contract.FilterUpdateType;\n      options: Contract.FilterOptions;\n    }>,\n  ): Promise<Array<string>> {\n    const service = ApiServiceRegistry.get(this.embeddingId).getService<PulseService>(EmbeddingServiceNames.PulseService);\n    return service.applyFiltersAsync(filters);\n  }\n\n  public getTimeDimensionAsync(): Promise<Contract.PulseTimeDimension> {\n    const service = ApiServiceRegistry.get(this.embeddingId).getService<PulseService>(EmbeddingServiceNames.PulseService);\n    return service.getTimeDimensionAsync();\n  }\n\n  public applyTimeDimensionAsync(timeDimension: Contract.PulseTimeDimension): Promise<void> {\n    const service = ApiServiceRegistry.get(this.embeddingId).getService<PulseService>(EmbeddingServiceNames.PulseService);\n    return service.applyTimeDimensionAsync(timeDimension);\n  }\n\n  public getFiltersAsync(): Promise<Array<Contract.PulseFilter>> {\n    const service = ApiServiceRegistry.get(this.embeddingId).getService<PulseService>(EmbeddingServiceNames.PulseService);\n    return service.getFiltersAsync();\n  }\n\n  public clearFiltersAsync(fieldNames: Array<string>): Promise<Array<string>> {\n    const service = ApiServiceRegistry.get(this.embeddingId).getService<PulseService>(EmbeddingServiceNames.PulseService);\n    return service.clearFiltersAsync(fieldNames);\n  }\n\n  public clearAllFiltersAsync(): Promise<void> {\n    const service = ApiServiceRegistry.get(this.embeddingId).getService<PulseService>(EmbeddingServiceNames.PulseService);\n    return service.clearAllFiltersAsync();\n  }\n}\n"]}